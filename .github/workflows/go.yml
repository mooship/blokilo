name: Go

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Install dependencies
        run: go mod tidy && go mod download

      - name: Create required directories
        run: mkdir -p data

      - name: Build application
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  cross-platform-build:
    name: Build cross-platform binaries
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: arm64
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Install dependencies
        run: go mod tidy && go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          EXT=""
          if [ "${GOOS}" = "windows" ]; then EXT=".exe"; fi
          OUT="blokilo-${GOOS}-${GOARCH}${EXT}"
          go build -tags netgo -ldflags '-s -w' -o "$OUT" ./cmd/blokilo

      - name: Upload binary to release
        uses: softprops/action-gh-release@v1
        with:
          files: blokilo-${{ matrix.goos }}-${{ matrix.goarch }}*
          draft: false
          prerelease: false
